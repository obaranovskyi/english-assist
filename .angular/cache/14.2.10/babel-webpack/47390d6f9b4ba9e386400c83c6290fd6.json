{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/expansion\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/divider\";\nimport * as i11 from \"@angular/material/badge\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"../result-grid/result-grid.component\";\n\nfunction TestComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6, \" \");\n  }\n}\n\nfunction TestComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r7, \" \");\n  }\n}\n\nfunction TestComponent_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r8, \" \");\n  }\n}\n\nfunction TestComponent_mat_card_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 11)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Enter translation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TestComponent_mat_card_23_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.enteredValue = $event);\n    })(\"keyup\", function TestComponent_mat_card_23_Template_input_keyup_6_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.checkEnteredValue($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-actions\", 13)(8, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TestComponent_mat_card_23_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.handleDefaultSuccess());\n    });\n    i0.ɵɵtext(9, \"I know the word\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TestComponent_mat_card_23_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.handleDefaultError());\n    });\n    i0.ɵɵtext(11, \"I don't know the word\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 15)(13, \"mat-icon\", 16);\n    i0.ɵɵtext(14, \"error\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"span\", 17)(16, \"mat-icon\", 18);\n    i0.ɵɵtext(17, \"check\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.currentWord.translation);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.enteredValue);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matBadge\", ctx_r3.errorCount);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matBadge\", ctx_r3.successCount);\n  }\n}\n\nfunction TestComponent_mat_card_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 19)(1, \"div\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"mat-divider\", 21);\n    i0.ɵɵelementStart(4, \"div\", 22)(5, \"div\", 23);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 24);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"span\", 25);\n    i0.ɵɵtext(11, \" Words left \");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"success\", ctx_r4.previousResults.length && ctx_r4.lastPreviousResult.isCorrect)(\"error\", ctx_r4.previousResults.length && !ctx_r4.lastPreviousResult.isCorrect);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.lastPreviousResult.translation);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\u279C \", ctx_r4.lastPreviousResult.enteredValue, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u2714 \", ctx_r4.lastPreviousResult.correctValue, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matBadge\", ctx_r4.currentTestWords.length + (ctx_r4.currentWord && 1 || 0));\n  }\n}\n\nfunction TestComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"ea-result-grid\", 27);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r5.previousResults);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 15, 20, 25, 30, 50, 100];\n};\n\nconst _c1 = function () {\n  return [1, 2, 3, 5, 10];\n};\n\nexport let TestComponent = /*#__PURE__*/(() => {\n  class TestComponent {\n    constructor() {\n      this.configPanelOpenState = false;\n      this._words = [];\n      this.numberOfCorrectAnswersPerWord = 5;\n      this._currentTestWords = [];\n      this.currentTest = 1;\n      this.numberOfTests = 1;\n      this.tests = [1];\n      this.enteredValue = '';\n      this.previousResults = [];\n      this.numberOfWordsPerPage = 5;\n    }\n\n    get currentTestWords() {\n      return this._currentTestWords.filter(testWord => {\n        return (testWord.successCount || 0) !== this.numberOfCorrectAnswersPerWord;\n      });\n    }\n\n    set currentTestWords(value) {\n      this._currentTestWords = value;\n    }\n\n    set words(value) {\n      this._words = value;\n      this.reloadTest();\n    }\n\n    get words() {\n      return this._words;\n    }\n\n    checkEnteredValue(e) {\n      if (e.key === 'Enter' || e.keyCode === 13 || e.which === 13) {\n        const enteredValue = e.target.value;\n        const isCorrectAnswer = this.compareAnswer(enteredValue);\n        this.handleAnswer(isCorrectAnswer, enteredValue);\n      }\n    }\n\n    handleAnswer(isCorrectAnswer, enteredValue = '') {\n      var _a, _b;\n\n      const previousResult = {\n        translation: (_a = this.currentWord) === null || _a === void 0 ? void 0 : _a.translation,\n        isCorrect: isCorrectAnswer,\n        enteredValue: enteredValue,\n        correctValue: (_b = this.currentWord) === null || _b === void 0 ? void 0 : _b.originalValue\n      };\n      this.previousResults.push(previousResult);\n      if (isCorrectAnswer) this.swapWordUsingSuccessAnswer();else this.swapWordUsingErrorAnswer();\n      this.enteredValue = '';\n    }\n\n    handleDefaultSuccess() {\n      var _a;\n\n      this.handleAnswer(true, (_a = this.currentWord) === null || _a === void 0 ? void 0 : _a.originalValue);\n    }\n\n    handleDefaultError() {\n      this.handleAnswer(false);\n    }\n\n    swapWordUsingSuccessAnswer() {\n      if (!this.currentWord) return;\n      this.currentWord.successCount = (this.currentWord.successCount || 0) + 1;\n      if ((this.currentWord.successCount || 0) <= this.numberOfCorrectAnswersPerWord) this.currentTestWords = [...this.currentTestWords, this.currentWord];\n      this.currentWord = this._currentTestWords.shift();\n    }\n\n    swapWordUsingErrorAnswer() {\n      this._currentTestWords.splice(Math.ceil((this.currentTestWords.length + 1) / 2), 0, this.currentWord);\n\n      this.currentWord = this._currentTestWords.shift();\n    }\n\n    reloadTest(resetTestNumber = false) {\n      if (resetTestNumber) this.currentTest = 1;\n      this.numberOfTests = this.calcPageCount(this.words, this.numberOfWordsPerPage);\n      this.tests = Array.from({\n        length: this.numberOfTests\n      }).map((value, index) => index + 1);\n\n      if (this.words.length <= this.numberOfWordsPerPage) {\n        this.currentTestWords = this.words.slice().map(el => Object.assign({}, el));\n      } else if (this.currentTest === 1) {\n        this.currentTestWords = this.words.slice(0, this.numberOfWordsPerPage).map(el => Object.assign({}, el));\n      } else {\n        this.currentTestWords = this.words.slice((this.currentTest - 1) * this.numberOfWordsPerPage, this.currentTest * this.numberOfWordsPerPage).map(element => Object.assign({}, element));\n      }\n\n      this.currentWord = this._currentTestWords.shift();\n      this.previousResults.length = 0;\n    }\n\n    resetTest() {\n      this.words = this._words;\n    }\n\n    calcPageCount(words, wordsPerPage) {\n      const fullPages = Math.floor(words.length / wordsPerPage);\n      const isRestMoreThanZero = Boolean(words.length % wordsPerPage);\n      return fullPages + (isRestMoreThanZero ? 1 : 0);\n    }\n\n    isLastPageSelected(words, wordsPerPage, testNumber) {\n      return testNumber === this.calcPageCount(words, wordsPerPage);\n    }\n\n    compareAnswer(value = '') {\n      var _a;\n\n      return ((_a = this.currentWord) === null || _a === void 0 ? void 0 : _a.originalValue.toLowerCase().trim().toLowerCase()) === value.toLowerCase().trim().toLowerCase();\n    }\n\n    get lastPreviousResult() {\n      return this.previousResults[this.previousResults.length - 1];\n    }\n\n    get successCount() {\n      return this.previousResults.filter(previousResponse => previousResponse.isCorrect).length;\n    }\n\n    get errorCount() {\n      return this.previousResults.filter(previousResponse => !previousResponse.isCorrect).length;\n    }\n\n  }\n\n  TestComponent.ɵfac = function TestComponent_Factory(t) {\n    return new (t || TestComponent)();\n  };\n\n  TestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TestComponent,\n    selectors: [[\"ea-test\"]],\n    inputs: {\n      numberOfWordsPerPage: \"numberOfWordsPerPage\",\n      words: \"words\"\n    },\n    decls: 26,\n    vars: 12,\n    consts: [[1, \"config-panel\", 3, \"expanded\", \"expandedChange\"], [1, \"config-section\"], [\"appearance\", \"fill\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"reset-test\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"previous-result\", 3, \"success\", \"error\", 4, \"ngIf\"], [\"class\", \"row test-results\", 4, \"ngIf\"], [3, \"value\"], [\"appearance\", \"fill\", 1, \"value-input\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [1, \"buttons-and-budges\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [1, \"error\"], [\"matBadgeColor\", \"warn\", 3, \"matBadge\"], [1, \"success\"], [\"matBadgeColor\", \"primary\", 3, \"matBadge\"], [1, \"previous-result\"], [1, \"header\"], [\"inset\", \"\"], [1, \"content\"], [1, \"entered\"], [1, \"answer\"], [\"matBadgeOverlap\", \"false\", \"matBadgeColor\", \"primary\", 3, \"matBadge\"], [1, \"row\", \"test-results\"], [3, \"data\"]],\n    template: function TestComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-expansion-panel\", 0);\n        i0.ɵɵlistener(\"expandedChange\", function TestComponent_Template_mat_expansion_panel_expandedChange_0_listener($event) {\n          return ctx.configPanelOpenState = $event;\n        });\n        i0.ɵɵelementStart(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n        i0.ɵɵtext(3, \" Configure test \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"mat-form-field\", 2)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Number of words per test\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TestComponent_Template_mat_select_ngModelChange_8_listener($event) {\n          return ctx.numberOfWordsPerPage = $event;\n        })(\"ngModelChange\", function TestComponent_Template_mat_select_ngModelChange_8_listener() {\n          return ctx.reloadTest(true);\n        });\n        i0.ɵɵtemplate(9, TestComponent_mat_option_9_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Test number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TestComponent_Template_mat_select_ngModelChange_13_listener($event) {\n          return ctx.currentTest = $event;\n        })(\"ngModelChange\", function TestComponent_Template_mat_select_ngModelChange_13_listener() {\n          return ctx.reloadTest();\n        });\n        i0.ɵɵtemplate(14, TestComponent_mat_option_14_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 2)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Number of correct answers per word\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TestComponent_Template_mat_select_ngModelChange_18_listener($event) {\n          return ctx.numberOfCorrectAnswersPerWord = $event;\n        })(\"ngModelChange\", function TestComponent_Template_mat_select_ngModelChange_18_listener() {\n          return ctx.reloadTest();\n        });\n        i0.ɵɵtemplate(19, TestComponent_mat_option_19_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TestComponent_Template_button_click_21_listener() {\n          return ctx.resetTest();\n        });\n        i0.ɵɵtext(22, \"Reset test\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(23, TestComponent_mat_card_23_Template, 18, 4, \"mat-card\", 7);\n        i0.ɵɵtemplate(24, TestComponent_mat_card_24_Template, 12, 8, \"mat-card\", 8);\n        i0.ɵɵtemplate(25, TestComponent_div_25_Template, 2, 1, \"div\", 9);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"expanded\", ctx.configPanelOpenState);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.numberOfWordsPerPage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(10, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentTest);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tests);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.numberOfCorrectAnswersPerWord);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(11, _c1));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentWord);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.previousResults.length && ctx.currentWord);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.currentWord);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i2.NgIf, i3.MatExpansionPanel, i3.MatExpansionPanelHeader, i3.MatExpansionPanelTitle, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton, i7.MatCard, i7.MatCardTitle, i7.MatCardActions, i8.MatSelect, i9.MatOption, i10.MatDivider, i11.MatBadge, i12.MatIcon, i13.ResultGridComponent],\n    styles: [\".config-panel[_ngcontent-%COMP%]{margin-bottom:10px}.config-section[_ngcontent-%COMP%]{display:flex;justify-content:space-around;max-width:700px}@media only screen and (max-width: 600px){.config-section[_ngcontent-%COMP%]{flex-direction:column}.buttons-and-budges[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:nth-child(2){margin-left:1px}}.value-input[_ngcontent-%COMP%]{margin-top:15px;width:100%}.previous-result[_ngcontent-%COMP%]{margin-top:20px;font-size:16px}.previous-result[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-size:18px;margin-bottom:10px}.previous-result[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin-top:10px}.previous-result[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .entered[_ngcontent-%COMP%], .previous-result[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .answer[_ngcontent-%COMP%]{margin-bottom:10px}.previous-result.success[_ngcontent-%COMP%]{color:#0f5132;border:1px solid #0f5132;box-shadow:none}.previous-result.error[_ngcontent-%COMP%]{color:#842029;border:1px solid #842029;box-shadow:none}.buttons-and-budges[_ngcontent-%COMP%]   .error[_ngcontent-%COMP%]{position:relative;top:5px}.buttons-and-budges[_ngcontent-%COMP%]   .success[_ngcontent-%COMP%]{position:relative;top:5px;left:10px}.reset-test[_ngcontent-%COMP%]{margin:0 15px 15px 0}\"]\n  });\n  return TestComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}