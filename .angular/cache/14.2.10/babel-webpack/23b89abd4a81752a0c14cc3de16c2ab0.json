{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { NOTIFICATION_CONFIG } from '../../constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"../../words.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/expansion\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nexport let UpdateWordComponent = /*#__PURE__*/(() => {\n  class UpdateWordComponent {\n    constructor(_snackBar, wordService) {\n      this._snackBar = _snackBar;\n      this.wordService = wordService;\n      this.panelOpenState = true;\n      this.originalValue = '';\n      this.translation = '';\n      this.cancel = new EventEmitter();\n      this.hideForm = new EventEmitter();\n    }\n\n    set wordToUpdate(value) {\n      this._wordToUpdate = value;\n      this.translation = value.translation;\n      this.originalValue = value.originalValue;\n    }\n\n    get wordToUpdate() {\n      return this._wordToUpdate;\n    }\n\n    update() {\n      this.wordService.updateWord(Object.assign(Object.assign({}, this.wordToUpdate), {\n        translation: this.translation,\n        originalValue: this.originalValue\n      }));\n      this.panelOpenState = false;\n\n      this._snackBar.open(`You've updated the word ${this.originalValue}.`, 'OK', NOTIFICATION_CONFIG);\n\n      this.hideForm.emit();\n    }\n\n  }\n\n  UpdateWordComponent.ɵfac = function UpdateWordComponent_Factory(t) {\n    return new (t || UpdateWordComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.WordsService));\n  };\n\n  UpdateWordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateWordComponent,\n    selectors: [[\"ea-update-word\"]],\n    inputs: {\n      wordToUpdate: \"wordToUpdate\"\n    },\n    outputs: {\n      cancel: \"cancel\",\n      hideForm: \"hideForm\"\n    },\n    decls: 17,\n    vars: 4,\n    consts: [[1, \"main-container\"], [3, \"expanded\", \"expandedChange\"], [\"appearance\", \"fill\", 1, \"input-width\"], [\"matInput\", \"\", \"name\", \"originalvalue\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"translation\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 1, \"right-margin\", 3, \"disabled\", \"click\"], [\"mat-stroked-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function UpdateWordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-expansion-panel\", 1);\n        i0.ɵɵlistener(\"expandedChange\", function UpdateWordComponent_Template_mat_expansion_panel_expandedChange_1_listener($event) {\n          return ctx.panelOpenState = $event;\n        });\n        i0.ɵɵelementStart(2, \"mat-expansion-panel-header\")(3, \"mat-panel-title\");\n        i0.ɵɵtext(4, \" Update word \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 2)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Original value:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateWordComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.originalValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Translation:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateWordComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.translation = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function UpdateWordComponent_Template_button_click_13_listener() {\n          return ctx.update();\n        });\n        i0.ɵɵtext(14, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function UpdateWordComponent_Template_button_click_15_listener() {\n          return ctx.cancel.emit();\n        });\n        i0.ɵɵtext(16, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"expanded\", ctx.panelOpenState);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.originalValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.translation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.originalValue || !ctx.translation);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatExpansionPanel, i4.MatExpansionPanelHeader, i4.MatExpansionPanelTitle, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatButton],\n    styles: [\".main-container[_ngcontent-%COMP%]   .json-example[_ngcontent-%COMP%]{color:#8a2be2;font-style:italic;margin-left:10px}.main-container[_ngcontent-%COMP%]   .input-width[_ngcontent-%COMP%]{width:100%}.main-container[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{padding-left:15px;font-size:14px;color:red}.main-container[_ngcontent-%COMP%]   .right-margin[_ngcontent-%COMP%]{margin-right:10px}\"]\n  });\n  return UpdateWordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}